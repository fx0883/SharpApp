书写习惯
	Ruby是一种面向行的语言，一行可以写多个语句，使用“；”隔开。一条语句也可以写在多行，行之间使用“\”连接。
语言注释
	Rub中提供两种形式的注释：
单行注释，以“#”开始直到行末尾。
多行注释，在“=begin”和“=end”之间的行会被解释器忽略。
BEGIN和END块
每一个Ruby源文件可以声明BEGIN块和END块，BEGIN块在文件载入被执行，END块在程序执行完毕被执行。
			BEGIN {
			#Begin code
		}
	END {
		#End code
	}
	
常用分隔符输入
分隔符输入格式以一个“%”开始，紧接着一个字符表明输入类型，随后的字符表示分隔符。分隔符可以是任何的非字母单字节字符。如果分隔符是“(，[，{，<”，则表示结束的分隔符为相应的“)，]，}，>”，而且可以嵌套出现。其它的分隔符则是分隔字符下一次出现的位置。
		%Q/This is a string/
		%Q<This <is> a string>
使用分隔符也可以跨越多行：
string = %q{
		BEGIN {
			puts "===BEGIN==="
		}
}

%q	单引号包围的字符串
%	双引号包围的字符串
%Q	双引号包围的字符串
%w	每一个元素都是字符串的数组
%W	每一个元素都是字符串的数组
%r	正则表达式
%x	Shell命令
命名规则
	Ruby中的对象和常量保存了对实际对象的引用，对象自己并没有类型，所谓的对象的类型是指它引用的实际对象的类型。
		常量可以在类或模块中定义，访问时需要使用类名加上“::”。
变量
在Ruby中使用不同的前缀来区分变量的不同类型：
类型	示例	解释
全局变量	$foo	全局变量以$开始，未初始化的全局变量值为nil
实例变量	@foo	实例变量以@开始，未初始化的实例变量值为nil
类变量	@@foo	类变量以@@开始，必须初始化
局部变量	foo	局部变量以小写字母或下划线开始
常量	Foo	常量以大写字母开始
预定义变量
异常相关
名称	类型	解释
$!	Exception	最近被抛出的异常对象，可以在rescue语句中使用=>访问
$@	Array	最近被抛出异常相关的堆栈信息，可以使用Exception#backtrace方法访问
正则表达式匹配相关
名称	类型	解释
$&	String	已经匹配到的字符串
$@	String	最后一个使用括号匹配到的字符串
$`	String	前一个匹配到的字符串
$’	String	下一个匹配到的字符串
$=	Object	（已废弃）如果内容不为nil或failse，那么正则表达式匹配，字符串比较和Hash表的值不区分大小写
$1到$9	String	正则表达式匹配使用圆括号相应的匹配串
$~	MatchData	保存正则表达式匹配结果
输入输出相关
名称	类型	解释
$/	String	输入分隔符
$-0	String	和$/同义
$\	String	输出分隔符
$,	String	使用Array#join方法输出时的分隔符，默认为nil
$.	Fixnum	
$;	String	使用String#split方法时的分隔符，默认为nil
$<	Object	ARGF缩写
$>	IO	$defout缩写
$_	String	
$defout	IO	
$deferr	IO	
$-F	String	
$stderr	IO	
$stdin	IO	
$stdout	IO	
环境相关
名称	类型	解释
$0	String	当前执行应用程序名
$*	Array	保存了命令行执行的参数
$”	Array	
$$	Fixnum	
$?	Process::status	
$:	Array	
$-a	Object	
$-d	Object	
$DEBUG	Object	
__FILE__	String	
$F	Array	
$FILENAME	String	
$-i	String	
$-I	Array	
$-K	String	
$-l	Object	
__LINE__	String	
$LOAD_PATH	Array	
$-p	Object	
$SAFE	Fixnum	
$VERBOSE	Object	
$-v	Object	
$-w	Object	
标准对象
名称	类型	解释
ARGF	Object	和$<同义
ARGV	Array	和$*同义
ENV	Object	
false	FalseClass	
nil	NilClass	
self	Object	
true	TrueClass	

全局常量
名称	类型	解释
DATA	IO	和$<同义
FALSE	FalseClass	和$*同义
NIL	NilClass	
RUBY_PLATFORM	String	
RUBY_RELEASE_DATE	String	
RUBY_VERSION	String	
STDERR	IO	
STDIN	IO	
STDOUT	IO	
SCRIPT_LINES__	Hash	
TOPLEVEL_BINDING	Binding	
TRUE	TrueClass	


附录
§1  术语对照
Singleton Method 单例方法
Singleton Class 单件类
iterator 迭代器
handler 处理器
callback 回调

class Integer
		def get_debug_info
			"This is #{self}"
		end
end
puts (0..5).map { |i| i.get_debug_info }
执行结果为：
This is 0
This is 1
This is 2
This is 3
This is 4
This is 5