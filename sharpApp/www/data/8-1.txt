§1.1  Ruby的历史
	Ruby语言的发明人是日本人松本行弘(Matsumoto Yukihiro)，大家亲切的称呼他"Matz"。
可能会出乎大家的意料，Ruby并不是一种近年来才诞生的语言，它的历史可以追溯到1993年，Ruby之父Matz开始对脚本语言感兴趣。在通过一些分析和思考之后，Matz认为脚本语言是可以变得很强大和灵活的，于是他准备把脚本语言作为他的发展方向。 和很多人一样，Matz是一个面向对象程序设计的fans，自然而然他想研究一种支持面向对象程序设计的脚本语言。随后的一段时间，他到网络上搜集了一些相关的资料，并且发现了Perl 5，当时Perl 5还没有发布。通过一段时间了解后，Matz.发现Perl 5这并不是他想的东西，所以他放弃了把Perl当作一个面向对象的脚本语言使用的念头。随后Matz转向了Python，Python是一个解释型的、面向对象语言，但是Matz发现Python并不能完全算作“面向对象”语言。Matz认为Python是面向对象和过程化程序设计语言（Procedural Programming Language）的混合产物。Matz希望找到的是一种比Perl更强大、比Python更面向对象的语言，但是很遗憾, 这样的语言当时在地球上并不存在。于是Matz打算自己设计一个全新的编程语言。1993年2月24日是一个值得纪念的日子，在这一天Ruby诞生了。 1995年12月Matz推出了Ruby的第一个版本Ruby 0.95。 在1996年以前，都是Matz.一个人在开发进行Ruby的开发。后来随着Ruby社区的渐渐形成，很多社区成员给了Matz许多有意义的帮助，包括提交bug和patch等。现在，Ruby像其他开源项目一样，有自己的开发团队，任何有能力的个人或团体都可以参与Ruby的开发与进化。

§1.2  Ruby名字的由来
	首先明确一点，Ruby并不是其他单词的缩写。受Perl的影响，Matz也想用一种宝石来命名他的新语言，他使用了他的一位同事的生肖石－红宝石。后来，Matz意识到Ruby这个名字十分恰当，首先，在生肖石中，Pearl代表六月，而Ruby代表七月。在字体大小上，Pearl大小是5pt, ruby的大小是5.5pt。所以Ruby这个名字对于一种Perl的后续语言十分合适。
§1.3  Ruby的特点
Ruby是一种功能强大的面向对象的脚本语言，可以使用它方便快捷地进行面向对象程序设计。与Perl类似，而且Ruby具有强大的文本处理功能，使文本处理变得简单。此外还可以方便地使用C语言来扩展Ruby的功能。
若您曾经“想要一种简单的面向对象的语言”，或者认为“Perl的功能虽然好用，但它的语法真让人受不了”，又或者觉得“LISP系列语言的思想不错，但到处都是括号真让人讨厌，最起码算式应该按照通常的样式书写”。那么，Ruby或许能让您满意。
归纳起来，Ruby有以下优点：
解释型执行，方便快捷
Ruby是解释型语言，其程序无需编译即可执行。
语法简单、优雅
语法比较简单，类似Algol系语法。
完全面向对象
Ruby从一开始就被设计成纯粹的面向对象语言，因此所有东西都是对象，例如整数等基本数据类型。
内置正则式引擎，适合文本处理
Ruby支持功能强大的字符串操作和正则表达式检索功能，可以方便的对字符串进行处理。
自动垃圾收集
具有垃圾回收（Garbage Collect，GC）功能，能自动回收不再使用的对象。不需要用户对内存进行管理。
跨平台和高度可移植性
Ruby支持多种平台，在Windows, Unix, Linux, MacOS上都可以运行。Ruby程序的可移植性非常好，绝大多数程序可以不加修改的在各种平台上加以运行。
有优雅、完善的异常处理机制
Ruby提供了一整套异常处理机制，可以方便优雅地处理代码处理出错的情况。
拥有很多高级特性
Ruby拥有很多高级特性，例如操作符重载、Mix-ins、特殊方法等等，是用这些特性可以方便地完成各种强大的功能。
同时，由于是解释型语言，Ruby也有下列缺点：
解释型语言，所以速度较慢
静态检查比较少
§1.4  Ruby和Python的比较
	Python是Ruby的劲敌。其功力深厚，可谓“千年蛇妖”。但matz认为Python的功能仍不完美，不然就不会创造Ruby了。