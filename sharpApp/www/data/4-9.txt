CustomCreationConverter 是一个JsonConverter ，用来提供一种自定义对象在JSON反序列化期间如何创建的方法。一旦对象被创建，他就会通过序列化器获得值。
public interface IPerson
{
  string FirstName { get; set; }
  string LastName { get; set; }
  DateTime BirthDate { get; set; }
}
public class Employee : IPerson
{
  public string FirstName { get; set; }
  public string LastName { get; set; }
  public DateTime BirthDate { get; set; }
  public string Department { get; set; }
  public string JobTitle { get; set; }
}
public class PersonConverter : CustomCreationConverter<IPerson>
{
  public override IPerson Create(Type objectType)
  {
    return new Employee();
  }
}
这是一个非常简单的例子。更复杂的场景可能还会调用一个对象工厂或者在运行时解析对象的service locator。
//[
//  {
//    "FirstName": "Maurice",
//    "LastName": "Moss",
//    "BirthDate": "\/Date(252291661000)\/",
//    "Department": "IT",
//    "JobTitle": "Support"
//  },
//  {
//    "FirstName": "Jen",
//    "LastName": "Barber",
//    "BirthDate": "\/Date(258771661000)\/",
//    "Department": "IT",
//    "JobTitle": "Manager"
//  }
//]
List<IPerson> people = JsonConvert.DeserializeObject<List<IPerson>>(json, new PersonConverter());
IPerson person = people[0];
Console.WriteLine(person.GetType());
// Newtonsoft.Json.Tests.Employee
Console.WriteLine(person.FirstName);
// Maurice
Employee employee = (Employee)person;
Console.WriteLine(employee.JobTitle);
// Support